/*
 * ReSTFS
 * ReSTFS Open API 3.0 Spec
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.eue.io.swagger.client.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * UserInfoResponseModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-10-14T22:10:10.297090+02:00[Europe/Zurich]")
public class UserInfoResponseModel {
  @JsonProperty("account")
  private Account account = null;

  @JsonProperty("quotas")
  private Quotas quotas = null;

  @JsonProperty("limits")
  private Limits limits = null;

  @JsonProperty("aliases")
  private Aliases aliases = null;

  @JsonProperty("settings")
  private Settings settings = null;

  public UserInfoResponseModel account(Account account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @Schema(description = "")
  public Account getAccount() {
    return account;
  }

  public void setAccount(Account account) {
    this.account = account;
  }

  public UserInfoResponseModel quotas(Quotas quotas) {
    this.quotas = quotas;
    return this;
  }

   /**
   * Get quotas
   * @return quotas
  **/
  @Schema(description = "")
  public Quotas getQuotas() {
    return quotas;
  }

  public void setQuotas(Quotas quotas) {
    this.quotas = quotas;
  }

  public UserInfoResponseModel limits(Limits limits) {
    this.limits = limits;
    return this;
  }

   /**
   * Get limits
   * @return limits
  **/
  @Schema(description = "")
  public Limits getLimits() {
    return limits;
  }

  public void setLimits(Limits limits) {
    this.limits = limits;
  }

  public UserInfoResponseModel aliases(Aliases aliases) {
    this.aliases = aliases;
    return this;
  }

   /**
   * Get aliases
   * @return aliases
  **/
  @Schema(description = "")
  public Aliases getAliases() {
    return aliases;
  }

  public void setAliases(Aliases aliases) {
    this.aliases = aliases;
  }

  public UserInfoResponseModel settings(Settings settings) {
    this.settings = settings;
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @Schema(description = "")
  public Settings getSettings() {
    return settings;
  }

  public void setSettings(Settings settings) {
    this.settings = settings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserInfoResponseModel userInfoResponseModel = (UserInfoResponseModel) o;
    return Objects.equals(this.account, userInfoResponseModel.account) &&
        Objects.equals(this.quotas, userInfoResponseModel.quotas) &&
        Objects.equals(this.limits, userInfoResponseModel.limits) &&
        Objects.equals(this.aliases, userInfoResponseModel.aliases) &&
        Objects.equals(this.settings, userInfoResponseModel.settings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, quotas, limits, aliases, settings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserInfoResponseModel {\n");
    
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    quotas: ").append(toIndentedString(quotas)).append("\n");
    sb.append("    limits: ").append(toIndentedString(limits)).append("\n");
    sb.append("    aliases: ").append(toIndentedString(aliases)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
