/*
 * DRACOON API
 * REST Web Services for DRACOON<br>built at: 1970-01-01 00:00:00.000<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * OpenAPI spec version: 4.28.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.sds.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.sds.io.swagger.client.model.PrivateKeyContainer;
import ch.cyberduck.core.sds.io.swagger.client.model.PublicKeyContainer;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Request model for creating a key pair
 */
@Schema(description = "Request model for creating a key pair")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-25T23:34:01.480829+02:00[Europe/Paris]")
public class CreateKeyPairRequest {
  @JsonProperty("privateKeyContainer")
  private PrivateKeyContainer privateKeyContainer = null;

  @JsonProperty("publicKeyContainer")
  private PublicKeyContainer publicKeyContainer = null;

  @JsonProperty("previousPrivateKey")
  private PrivateKeyContainer previousPrivateKey = null;

  public CreateKeyPairRequest privateKeyContainer(PrivateKeyContainer privateKeyContainer) {
    this.privateKeyContainer = privateKeyContainer;
    return this;
  }

   /**
   * Get privateKeyContainer
   * @return privateKeyContainer
  **/
  @Schema(required = true, description = "")
  public PrivateKeyContainer getPrivateKeyContainer() {
    return privateKeyContainer;
  }

  public void setPrivateKeyContainer(PrivateKeyContainer privateKeyContainer) {
    this.privateKeyContainer = privateKeyContainer;
  }

  public CreateKeyPairRequest publicKeyContainer(PublicKeyContainer publicKeyContainer) {
    this.publicKeyContainer = publicKeyContainer;
    return this;
  }

   /**
   * Get publicKeyContainer
   * @return publicKeyContainer
  **/
  @Schema(required = true, description = "")
  public PublicKeyContainer getPublicKeyContainer() {
    return publicKeyContainer;
  }

  public void setPublicKeyContainer(PublicKeyContainer publicKeyContainer) {
    this.publicKeyContainer = publicKeyContainer;
  }

  public CreateKeyPairRequest previousPrivateKey(PrivateKeyContainer previousPrivateKey) {
    this.previousPrivateKey = previousPrivateKey;
    return this;
  }

   /**
   * Get previousPrivateKey
   * @return previousPrivateKey
  **/
  @Schema(required = true, description = "")
  public PrivateKeyContainer getPreviousPrivateKey() {
    return previousPrivateKey;
  }

  public void setPreviousPrivateKey(PrivateKeyContainer previousPrivateKey) {
    this.previousPrivateKey = previousPrivateKey;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateKeyPairRequest createKeyPairRequest = (CreateKeyPairRequest) o;
    return Objects.equals(this.privateKeyContainer, createKeyPairRequest.privateKeyContainer) &&
        Objects.equals(this.publicKeyContainer, createKeyPairRequest.publicKeyContainer) &&
        Objects.equals(this.previousPrivateKey, createKeyPairRequest.previousPrivateKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(privateKeyContainer, publicKeyContainer, previousPrivateKey);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateKeyPairRequest {\n");
    
    sb.append("    privateKeyContainer: ").append(toIndentedString(privateKeyContainer)).append("\n");
    sb.append("    publicKeyContainer: ").append(toIndentedString(publicKeyContainer)).append("\n");
    sb.append("    previousPrivateKey: ").append(toIndentedString(previousPrivateKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
