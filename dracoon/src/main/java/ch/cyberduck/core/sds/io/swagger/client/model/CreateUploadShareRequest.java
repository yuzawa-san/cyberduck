/*
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * OpenAPI spec version: 4.30.0-beta.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.sds.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.sds.io.swagger.client.model.ObjectExpiration;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Request model for creating an Upload Share
 */
@Schema(description = "Request model for creating an Upload Share")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-16T11:28:10.116221+02:00[Europe/Zurich]")
public class CreateUploadShareRequest {
  @JsonProperty("targetId")
  private Long targetId = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("password")
  private String password = null;

  @JsonProperty("expiration")
  private ObjectExpiration expiration = null;

  @JsonProperty("filesExpiryPeriod")
  private Integer filesExpiryPeriod = null;

  @JsonProperty("notes")
  private String notes = null;

  @JsonProperty("internalNotes")
  private String internalNotes = null;

  @JsonProperty("showUploadedFiles")
  private Boolean showUploadedFiles = false;

  @JsonProperty("maxSlots")
  private Integer maxSlots = null;

  @JsonProperty("maxSize")
  private Long maxSize = null;

  @JsonProperty("receiverLanguage")
  private String receiverLanguage = null;

  @JsonProperty("textMessageRecipients")
  private List<String> textMessageRecipients = null;

  @JsonProperty("showCreatorName")
  private Boolean showCreatorName = false;

  @JsonProperty("showCreatorUsername")
  private Boolean showCreatorUsername = false;

  @JsonProperty("notifyCreator")
  private Boolean notifyCreator = false;

  @JsonProperty("creatorLanguage")
  private String creatorLanguage = null;

  @JsonProperty("sendMail")
  private Boolean sendMail = false;

  @JsonProperty("mailRecipients")
  private String mailRecipients = null;

  @JsonProperty("mailSubject")
  private String mailSubject = null;

  @JsonProperty("mailBody")
  private String mailBody = null;

  @JsonProperty("sendSms")
  private Boolean sendSms = false;

  @JsonProperty("smsRecipients")
  private String smsRecipients = null;

  public CreateUploadShareRequest targetId(Long targetId) {
    this.targetId = targetId;
    return this;
  }

   /**
   * Target room or folder ID
   * @return targetId
  **/
  @Schema(required = true, description = "Target room or folder ID")
  public Long getTargetId() {
    return targetId;
  }

  public void setTargetId(Long targetId) {
    this.targetId = targetId;
  }

  public CreateUploadShareRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Alias name  (default: name of the shared node)
   * @return name
  **/
  @Schema(description = "Alias name  (default: name of the shared node)")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateUploadShareRequest password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Password
   * @return password
  **/
  @Schema(description = "Password")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public CreateUploadShareRequest expiration(ObjectExpiration expiration) {
    this.expiration = expiration;
    return this;
  }

   /**
   * Get expiration
   * @return expiration
  **/
  @Schema(description = "")
  public ObjectExpiration getExpiration() {
    return expiration;
  }

  public void setExpiration(ObjectExpiration expiration) {
    this.expiration = expiration;
  }

  public CreateUploadShareRequest filesExpiryPeriod(Integer filesExpiryPeriod) {
    this.filesExpiryPeriod = filesExpiryPeriod;
    return this;
  }

   /**
   * Number of days after which uploaded files expire
   * @return filesExpiryPeriod
  **/
  @Schema(description = "Number of days after which uploaded files expire")
  public Integer getFilesExpiryPeriod() {
    return filesExpiryPeriod;
  }

  public void setFilesExpiryPeriod(Integer filesExpiryPeriod) {
    this.filesExpiryPeriod = filesExpiryPeriod;
  }

  public CreateUploadShareRequest notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * User notes
   * @return notes
  **/
  @Schema(description = "User notes")
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }

  public CreateUploadShareRequest internalNotes(String internalNotes) {
    this.internalNotes = internalNotes;
    return this;
  }

   /**
   * &amp;#128640; Since v4.11.0  Internal notes
   * @return internalNotes
  **/
  @Schema(description = "&#128640; Since v4.11.0  Internal notes")
  public String getInternalNotes() {
    return internalNotes;
  }

  public void setInternalNotes(String internalNotes) {
    this.internalNotes = internalNotes;
  }

  public CreateUploadShareRequest showUploadedFiles(Boolean showUploadedFiles) {
    this.showUploadedFiles = showUploadedFiles;
    return this;
  }

   /**
   * Allow display of already uploaded files
   * @return showUploadedFiles
  **/
  @Schema(description = "Allow display of already uploaded files")
  public Boolean isShowUploadedFiles() {
    return showUploadedFiles;
  }

  public void setShowUploadedFiles(Boolean showUploadedFiles) {
    this.showUploadedFiles = showUploadedFiles;
  }

  public CreateUploadShareRequest maxSlots(Integer maxSlots) {
    this.maxSlots = maxSlots;
    return this;
  }

   /**
   * Maximal amount of files to upload
   * @return maxSlots
  **/
  @Schema(description = "Maximal amount of files to upload")
  public Integer getMaxSlots() {
    return maxSlots;
  }

  public void setMaxSlots(Integer maxSlots) {
    this.maxSlots = maxSlots;
  }

  public CreateUploadShareRequest maxSize(Long maxSize) {
    this.maxSize = maxSize;
    return this;
  }

   /**
   * Maximal total size of uploaded files (in bytes)
   * @return maxSize
  **/
  @Schema(description = "Maximal total size of uploaded files (in bytes)")
  public Long getMaxSize() {
    return maxSize;
  }

  public void setMaxSize(Long maxSize) {
    this.maxSize = maxSize;
  }

  public CreateUploadShareRequest receiverLanguage(String receiverLanguage) {
    this.receiverLanguage = receiverLanguage;
    return this;
  }

   /**
   * Language tag for messages to receiver
   * @return receiverLanguage
  **/
  @Schema(description = "Language tag for messages to receiver")
  public String getReceiverLanguage() {
    return receiverLanguage;
  }

  public void setReceiverLanguage(String receiverLanguage) {
    this.receiverLanguage = receiverLanguage;
  }

  public CreateUploadShareRequest textMessageRecipients(List<String> textMessageRecipients) {
    this.textMessageRecipients = textMessageRecipients;
    return this;
  }

  public CreateUploadShareRequest addTextMessageRecipientsItem(String textMessageRecipientsItem) {
    if (this.textMessageRecipients == null) {
      this.textMessageRecipients = new ArrayList<>();
    }
    this.textMessageRecipients.add(textMessageRecipientsItem);
    return this;
  }

   /**
   * &amp;#128640; Since v4.11.0  List of recipient FQTNs  E.123 / E.164 Format
   * @return textMessageRecipients
  **/
  @Schema(description = "&#128640; Since v4.11.0  List of recipient FQTNs  E.123 / E.164 Format")
  public List<String> getTextMessageRecipients() {
    return textMessageRecipients;
  }

  public void setTextMessageRecipients(List<String> textMessageRecipients) {
    this.textMessageRecipients = textMessageRecipients;
  }

  public CreateUploadShareRequest showCreatorName(Boolean showCreatorName) {
    this.showCreatorName = showCreatorName;
    return this;
  }

   /**
   * &amp;#128640; Since v4.11.0  Show creator first and last name.
   * @return showCreatorName
  **/
  @Schema(description = "&#128640; Since v4.11.0  Show creator first and last name.")
  public Boolean isShowCreatorName() {
    return showCreatorName;
  }

  public void setShowCreatorName(Boolean showCreatorName) {
    this.showCreatorName = showCreatorName;
  }

  public CreateUploadShareRequest showCreatorUsername(Boolean showCreatorUsername) {
    this.showCreatorUsername = showCreatorUsername;
    return this;
  }

   /**
   * &amp;#128640; Since v4.11.0  Show creator email address.
   * @return showCreatorUsername
  **/
  @Schema(description = "&#128640; Since v4.11.0  Show creator email address.")
  public Boolean isShowCreatorUsername() {
    return showCreatorUsername;
  }

  public void setShowCreatorUsername(Boolean showCreatorUsername) {
    this.showCreatorUsername = showCreatorUsername;
  }

  public CreateUploadShareRequest notifyCreator(Boolean notifyCreator) {
    this.notifyCreator = notifyCreator;
    return this;
  }

   /**
   * &amp;#128679; Deprecated since v4.20.0  Notify creator on every upload.
   * @return notifyCreator
  **/
  @Schema(description = "&#128679; Deprecated since v4.20.0  Notify creator on every upload.")
  public Boolean isNotifyCreator() {
    return notifyCreator;
  }

  public void setNotifyCreator(Boolean notifyCreator) {
    this.notifyCreator = notifyCreator;
  }

  public CreateUploadShareRequest creatorLanguage(String creatorLanguage) {
    this.creatorLanguage = creatorLanguage;
    return this;
  }

   /**
   * &amp;#128679; Deprecated since v4.20.0  Language tag for messages to creator
   * @return creatorLanguage
  **/
  @Schema(description = "&#128679; Deprecated since v4.20.0  Language tag for messages to creator")
  public String getCreatorLanguage() {
    return creatorLanguage;
  }

  public void setCreatorLanguage(String creatorLanguage) {
    this.creatorLanguage = creatorLanguage;
  }

  public CreateUploadShareRequest sendMail(Boolean sendMail) {
    this.sendMail = sendMail;
    return this;
  }

   /**
   * &amp;#128679; Deprecated since v4.11.0  Notify recipients via email  Please use &#x60;POST /shares/uploads/{share_id}/email&#x60; API instead.
   * @return sendMail
  **/
  @Schema(description = "&#128679; Deprecated since v4.11.0  Notify recipients via email  Please use `POST /shares/uploads/{share_id}/email` API instead.")
  public Boolean isSendMail() {
    return sendMail;
  }

  public void setSendMail(Boolean sendMail) {
    this.sendMail = sendMail;
  }

  public CreateUploadShareRequest mailRecipients(String mailRecipients) {
    this.mailRecipients = mailRecipients;
    return this;
  }

   /**
   * &amp;#128679; Deprecated since v4.11.0  CSV string of recipient email addresses
   * @return mailRecipients
  **/
  @Schema(description = "&#128679; Deprecated since v4.11.0  CSV string of recipient email addresses")
  public String getMailRecipients() {
    return mailRecipients;
  }

  public void setMailRecipients(String mailRecipients) {
    this.mailRecipients = mailRecipients;
  }

  public CreateUploadShareRequest mailSubject(String mailSubject) {
    this.mailSubject = mailSubject;
    return this;
  }

   /**
   * &amp;#128679; Deprecated since v4.11.0  Notification email subject
   * @return mailSubject
  **/
  @Schema(description = "&#128679; Deprecated since v4.11.0  Notification email subject")
  public String getMailSubject() {
    return mailSubject;
  }

  public void setMailSubject(String mailSubject) {
    this.mailSubject = mailSubject;
  }

  public CreateUploadShareRequest mailBody(String mailBody) {
    this.mailBody = mailBody;
    return this;
  }

   /**
   * &amp;#128679; Deprecated since v4.11.0  Notification email content
   * @return mailBody
  **/
  @Schema(description = "&#128679; Deprecated since v4.11.0  Notification email content")
  public String getMailBody() {
    return mailBody;
  }

  public void setMailBody(String mailBody) {
    this.mailBody = mailBody;
  }

  public CreateUploadShareRequest sendSms(Boolean sendSms) {
    this.sendSms = sendSms;
    return this;
  }

   /**
   * &amp;#128679; Deprecated since v4.11.0  Send share password via SMS  Please use &#x60;textMessageRecipients&#x60; attribute instead.
   * @return sendSms
  **/
  @Schema(description = "&#128679; Deprecated since v4.11.0  Send share password via SMS  Please use `textMessageRecipients` attribute instead.")
  public Boolean isSendSms() {
    return sendSms;
  }

  public void setSendSms(Boolean sendSms) {
    this.sendSms = sendSms;
  }

  public CreateUploadShareRequest smsRecipients(String smsRecipients) {
    this.smsRecipients = smsRecipients;
    return this;
  }

   /**
   * &amp;#128679; Deprecated since v4.11.0  CSV string of recipient MSISDNs
   * @return smsRecipients
  **/
  @Schema(description = "&#128679; Deprecated since v4.11.0  CSV string of recipient MSISDNs")
  public String getSmsRecipients() {
    return smsRecipients;
  }

  public void setSmsRecipients(String smsRecipients) {
    this.smsRecipients = smsRecipients;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateUploadShareRequest createUploadShareRequest = (CreateUploadShareRequest) o;
    return Objects.equals(this.targetId, createUploadShareRequest.targetId) &&
        Objects.equals(this.name, createUploadShareRequest.name) &&
        Objects.equals(this.password, createUploadShareRequest.password) &&
        Objects.equals(this.expiration, createUploadShareRequest.expiration) &&
        Objects.equals(this.filesExpiryPeriod, createUploadShareRequest.filesExpiryPeriod) &&
        Objects.equals(this.notes, createUploadShareRequest.notes) &&
        Objects.equals(this.internalNotes, createUploadShareRequest.internalNotes) &&
        Objects.equals(this.showUploadedFiles, createUploadShareRequest.showUploadedFiles) &&
        Objects.equals(this.maxSlots, createUploadShareRequest.maxSlots) &&
        Objects.equals(this.maxSize, createUploadShareRequest.maxSize) &&
        Objects.equals(this.receiverLanguage, createUploadShareRequest.receiverLanguage) &&
        Objects.equals(this.textMessageRecipients, createUploadShareRequest.textMessageRecipients) &&
        Objects.equals(this.showCreatorName, createUploadShareRequest.showCreatorName) &&
        Objects.equals(this.showCreatorUsername, createUploadShareRequest.showCreatorUsername) &&
        Objects.equals(this.notifyCreator, createUploadShareRequest.notifyCreator) &&
        Objects.equals(this.creatorLanguage, createUploadShareRequest.creatorLanguage) &&
        Objects.equals(this.sendMail, createUploadShareRequest.sendMail) &&
        Objects.equals(this.mailRecipients, createUploadShareRequest.mailRecipients) &&
        Objects.equals(this.mailSubject, createUploadShareRequest.mailSubject) &&
        Objects.equals(this.mailBody, createUploadShareRequest.mailBody) &&
        Objects.equals(this.sendSms, createUploadShareRequest.sendSms) &&
        Objects.equals(this.smsRecipients, createUploadShareRequest.smsRecipients);
  }

  @Override
  public int hashCode() {
    return Objects.hash(targetId, name, password, expiration, filesExpiryPeriod, notes, internalNotes, showUploadedFiles, maxSlots, maxSize, receiverLanguage, textMessageRecipients, showCreatorName, showCreatorUsername, notifyCreator, creatorLanguage, sendMail, mailRecipients, mailSubject, mailBody, sendSms, smsRecipients);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateUploadShareRequest {\n");
    
    sb.append("    targetId: ").append(toIndentedString(targetId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    filesExpiryPeriod: ").append(toIndentedString(filesExpiryPeriod)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    internalNotes: ").append(toIndentedString(internalNotes)).append("\n");
    sb.append("    showUploadedFiles: ").append(toIndentedString(showUploadedFiles)).append("\n");
    sb.append("    maxSlots: ").append(toIndentedString(maxSlots)).append("\n");
    sb.append("    maxSize: ").append(toIndentedString(maxSize)).append("\n");
    sb.append("    receiverLanguage: ").append(toIndentedString(receiverLanguage)).append("\n");
    sb.append("    textMessageRecipients: ").append(toIndentedString(textMessageRecipients)).append("\n");
    sb.append("    showCreatorName: ").append(toIndentedString(showCreatorName)).append("\n");
    sb.append("    showCreatorUsername: ").append(toIndentedString(showCreatorUsername)).append("\n");
    sb.append("    notifyCreator: ").append(toIndentedString(notifyCreator)).append("\n");
    sb.append("    creatorLanguage: ").append(toIndentedString(creatorLanguage)).append("\n");
    sb.append("    sendMail: ").append(toIndentedString(sendMail)).append("\n");
    sb.append("    mailRecipients: ").append(toIndentedString(mailRecipients)).append("\n");
    sb.append("    mailSubject: ").append(toIndentedString(mailSubject)).append("\n");
    sb.append("    mailBody: ").append(toIndentedString(mailBody)).append("\n");
    sb.append("    sendSms: ").append(toIndentedString(sendSms)).append("\n");
    sb.append("    smsRecipients: ").append(toIndentedString(smsRecipients)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
