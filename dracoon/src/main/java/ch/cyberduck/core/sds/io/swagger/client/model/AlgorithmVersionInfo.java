/*
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * OpenAPI spec version: 4.30.0-beta.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.sds.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Algorithm information
 */
@Schema(description = "Algorithm information")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-16T11:28:10.116221+02:00[Europe/Zurich]")
public class AlgorithmVersionInfo {
  @JsonProperty("version")
  private String version = null;

  @JsonProperty("description")
  private String description = null;

  /**
   * Algorithm status  Derived from preference value and threshold
   */
  public enum StatusEnum {
    REQUIRED("REQUIRED"),
    DISCOURAGED("DISCOURAGED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  public AlgorithmVersionInfo version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Algorithm version
   * @return version
  **/
  @Schema(required = true, description = "Algorithm version")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public AlgorithmVersionInfo description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Algorithm description
   * @return description
  **/
  @Schema(required = true, description = "Algorithm description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public AlgorithmVersionInfo status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Algorithm status  Derived from preference value and threshold
   * @return status
  **/
  @Schema(required = true, description = "Algorithm status  Derived from preference value and threshold")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlgorithmVersionInfo algorithmVersionInfo = (AlgorithmVersionInfo) o;
    return Objects.equals(this.version, algorithmVersionInfo.version) &&
        Objects.equals(this.description, algorithmVersionInfo.description) &&
        Objects.equals(this.status, algorithmVersionInfo.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(version, description, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlgorithmVersionInfo {\n");
    
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
