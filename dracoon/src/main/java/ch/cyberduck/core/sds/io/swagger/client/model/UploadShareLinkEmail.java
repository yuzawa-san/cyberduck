/*
 * DRACOON API
 * REST Web Services for DRACOON<br>built at: 1970-01-01 00:00:00.000<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * OpenAPI spec version: 4.28.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.sds.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Request model for sending an email of an Upload Share link
 */
@Schema(description = "Request model for sending an email of an Upload Share link")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-25T23:34:01.480829+02:00[Europe/Paris]")
public class UploadShareLinkEmail {
  @JsonProperty("recipients")
  private List<String> recipients = new ArrayList<>();

  @JsonProperty("body")
  private String body = null;

  @JsonProperty("receiverLanguage")
  private String receiverLanguage = null;

  public UploadShareLinkEmail recipients(List<String> recipients) {
    this.recipients = recipients;
    return this;
  }

  public UploadShareLinkEmail addRecipientsItem(String recipientsItem) {
    this.recipients.add(recipientsItem);
    return this;
  }

   /**
   * List of recipient email addresses
   * @return recipients
  **/
  @Schema(required = true, description = "List of recipient email addresses")
  public List<String> getRecipients() {
    return recipients;
  }

  public void setRecipients(List<String> recipients) {
    this.recipients = recipients;
  }

  public UploadShareLinkEmail body(String body) {
    this.body = body;
    return this;
  }

   /**
   * Notification email content
   * @return body
  **/
  @Schema(required = true, description = "Notification email content")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public UploadShareLinkEmail receiverLanguage(String receiverLanguage) {
    this.receiverLanguage = receiverLanguage;
    return this;
  }

   /**
   * Language tag for messages to receiver
   * @return receiverLanguage
  **/
  @Schema(description = "Language tag for messages to receiver")
  public String getReceiverLanguage() {
    return receiverLanguage;
  }

  public void setReceiverLanguage(String receiverLanguage) {
    this.receiverLanguage = receiverLanguage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UploadShareLinkEmail uploadShareLinkEmail = (UploadShareLinkEmail) o;
    return Objects.equals(this.recipients, uploadShareLinkEmail.recipients) &&
        Objects.equals(this.body, uploadShareLinkEmail.body) &&
        Objects.equals(this.receiverLanguage, uploadShareLinkEmail.receiverLanguage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recipients, body, receiverLanguage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UploadShareLinkEmail {\n");
    
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    receiverLanguage: ").append(toIndentedString(receiverLanguage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
