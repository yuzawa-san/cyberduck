/*
 * Files.com API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.brick.io.swagger.client.api;

import ch.cyberduck.core.brick.io.swagger.client.ApiException;
import ch.cyberduck.core.brick.io.swagger.client.model.ProjectEntity;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Ignore
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    
    /**
     * Delete Project
     *
     * Delete Project
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteProjectsIdTest() throws ApiException {
        Integer id = null;
        api.deleteProjectsId(id);

        // TODO: test validations
    }
    
    /**
     * List Projects
     *
     * List Projects
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProjectsTest() throws ApiException {
        String cursor = null;
        Integer perPage = null;
        List<ProjectEntity> response = api.getProjects(cursor, perPage);

        // TODO: test validations
    }
    
    /**
     * Show Project
     *
     * Show Project
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProjectsIdTest() throws ApiException {
        Integer id = null;
        ProjectEntity response = api.getProjectsId(id);

        // TODO: test validations
    }
    
    /**
     * Update Project
     *
     * Update Project
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchProjectsIdTest() throws ApiException {
        Integer id = null;
        String globalAccess = null;
        ProjectEntity response = api.patchProjectsId(id, globalAccess);

        // TODO: test validations
    }
    
    /**
     * Create Project
     *
     * Create Project
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postProjectsTest() throws ApiException {
        String globalAccess = null;
        ProjectEntity response = api.postProjects(globalAccess);

        // TODO: test validations
    }
    
}
