/*
 * Files.com API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.brick.io.swagger.client.api;

import ch.cyberduck.core.brick.io.swagger.client.ApiException;
import ch.cyberduck.core.brick.io.swagger.client.model.As2KeyEntity;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for As2KeysApi
 */
@Ignore
public class As2KeysApiTest {

    private final As2KeysApi api = new As2KeysApi();

    
    /**
     * Delete As2 Key
     *
     * Delete As2 Key
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAs2KeysIdTest() throws ApiException {
        Integer id = null;
        api.deleteAs2KeysId(id);

        // TODO: test validations
    }
    
    /**
     * List As2 Keys
     *
     * List As2 Keys
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAs2KeysTest() throws ApiException {
        Integer userId = null;
        String cursor = null;
        Integer perPage = null;
        List<As2KeyEntity> response = api.getAs2Keys(userId, cursor, perPage);

        // TODO: test validations
    }
    
    /**
     * Show As2 Key
     *
     * Show As2 Key
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAs2KeysIdTest() throws ApiException {
        Integer id = null;
        As2KeyEntity response = api.getAs2KeysId(id);

        // TODO: test validations
    }
    
    /**
     * Update As2 Key
     *
     * Update As2 Key
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAs2KeysIdTest() throws ApiException {
        Integer id = null;
        String as2PartnershipName = null;
        As2KeyEntity response = api.patchAs2KeysId(id, as2PartnershipName);

        // TODO: test validations
    }
    
    /**
     * Create As2 Key
     *
     * Create As2 Key
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postAs2KeysTest() throws ApiException {
        String as2PartnershipName = null;
        String publicKey = null;
        Integer userId = null;
        As2KeyEntity response = api.postAs2Keys(as2PartnershipName, publicKey, userId);

        // TODO: test validations
    }
    
}
