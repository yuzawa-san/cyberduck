/*
 * Files.com API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.brick.io.swagger.client.api;

import ch.cyberduck.core.brick.io.swagger.client.ApiException;
import ch.cyberduck.core.brick.io.swagger.client.model.RequestEntity;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RequestsApi
 */
@Ignore
public class RequestsApiTest {

    private final RequestsApi api = new RequestsApi();

    
    /**
     * Delete Request
     *
     * Delete Request
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRequestsIdTest() throws ApiException {
        Integer id = null;
        api.deleteRequestsId(id);

        // TODO: test validations
    }
    
    /**
     * List Requests
     *
     * List Requests
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRequestsTest() throws ApiException {
        String cursor = null;
        Integer perPage = null;
        Map<String, String> sortBy = null;
        Boolean mine = null;
        String path = null;
        List<RequestEntity> response = api.getRequests(cursor, perPage, sortBy, mine, path);

        // TODO: test validations
    }
    
    /**
     * List Requests
     *
     * List Requests
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRequestsFoldersPathTest() throws ApiException {
        String path = null;
        String cursor = null;
        Integer perPage = null;
        Map<String, String> sortBy = null;
        Boolean mine = null;
        List<RequestEntity> response = api.getRequestsFoldersPath(path, cursor, perPage, sortBy, mine);

        // TODO: test validations
    }
    
    /**
     * Create Request
     *
     * Create Request
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postRequestsTest() throws ApiException {
        String path = null;
        String destination = null;
        String userIds = null;
        String groupIds = null;
        RequestEntity response = api.postRequests(path, destination, userIds, groupIds);

        // TODO: test validations
    }
    
}
