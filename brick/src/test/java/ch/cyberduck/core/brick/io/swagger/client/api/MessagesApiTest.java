/*
 * Files.com API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.brick.io.swagger.client.api;

import ch.cyberduck.core.brick.io.swagger.client.ApiException;
import ch.cyberduck.core.brick.io.swagger.client.model.MessageEntity;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MessagesApi
 */
@Ignore
public class MessagesApiTest {

    private final MessagesApi api = new MessagesApi();

    
    /**
     * Delete Message
     *
     * Delete Message
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMessagesIdTest() throws ApiException {
        Integer id = null;
        api.deleteMessagesId(id);

        // TODO: test validations
    }
    
    /**
     * List Messages
     *
     * List Messages
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMessagesTest() throws ApiException {
        Integer projectId = null;
        Integer userId = null;
        String cursor = null;
        Integer perPage = null;
        List<MessageEntity> response = api.getMessages(projectId, userId, cursor, perPage);

        // TODO: test validations
    }
    
    /**
     * Show Message
     *
     * Show Message
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMessagesIdTest() throws ApiException {
        Integer id = null;
        MessageEntity response = api.getMessagesId(id);

        // TODO: test validations
    }
    
    /**
     * Update Message
     *
     * Update Message
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMessagesIdTest() throws ApiException {
        Integer id = null;
        Integer projectId = null;
        String subject = null;
        String body = null;
        MessageEntity response = api.patchMessagesId(id, projectId, subject, body);

        // TODO: test validations
    }
    
    /**
     * Create Message
     *
     * Create Message
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postMessagesTest() throws ApiException {
        Integer projectId = null;
        String subject = null;
        String body = null;
        Integer userId = null;
        MessageEntity response = api.postMessages(projectId, subject, body, userId);

        // TODO: test validations
    }
    
}
