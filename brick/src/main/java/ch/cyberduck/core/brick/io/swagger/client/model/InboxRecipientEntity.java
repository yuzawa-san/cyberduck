/*
 * Files.com API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.brick.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * List Inbox Recipients
 */
@Schema(description = "List Inbox Recipients")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-25T22:25:43.390877+02:00[Europe/Paris]")
public class InboxRecipientEntity {
  @JsonProperty("company")
  private String company = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("note")
  private String note = null;

  @JsonProperty("recipient")
  private String recipient = null;

  @JsonProperty("sent_at")
  private DateTime sentAt = null;

  public InboxRecipientEntity company(String company) {
    this.company = company;
    return this;
  }

   /**
   * The recipient&#x27;s company.
   * @return company
  **/
  @Schema(example = "Acme Inc.", description = "The recipient's company.")
  public String getCompany() {
    return company;
  }

  public void setCompany(String company) {
    this.company = company;
  }

  public InboxRecipientEntity name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The recipient&#x27;s name.
   * @return name
  **/
  @Schema(example = "John Doe", description = "The recipient's name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InboxRecipientEntity note(String note) {
    this.note = note;
    return this;
  }

   /**
   * A note sent to the recipient with the inbox.
   * @return note
  **/
  @Schema(example = "Some note.", description = "A note sent to the recipient with the inbox.")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public InboxRecipientEntity recipient(String recipient) {
    this.recipient = recipient;
    return this;
  }

   /**
   * The recipient&#x27;s email address.
   * @return recipient
  **/
  @Schema(example = "john.doe@example.com", description = "The recipient's email address.")
  public String getRecipient() {
    return recipient;
  }

  public void setRecipient(String recipient) {
    this.recipient = recipient;
  }

  public InboxRecipientEntity sentAt(DateTime sentAt) {
    this.sentAt = sentAt;
    return this;
  }

   /**
   * When the Inbox was shared with this recipient.
   * @return sentAt
  **/
  @Schema(description = "When the Inbox was shared with this recipient.")
  public DateTime getSentAt() {
    return sentAt;
  }

  public void setSentAt(DateTime sentAt) {
    this.sentAt = sentAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InboxRecipientEntity inboxRecipientEntity = (InboxRecipientEntity) o;
    return Objects.equals(this.company, inboxRecipientEntity.company) &&
        Objects.equals(this.name, inboxRecipientEntity.name) &&
        Objects.equals(this.note, inboxRecipientEntity.note) &&
        Objects.equals(this.recipient, inboxRecipientEntity.recipient) &&
        Objects.equals(this.sentAt, inboxRecipientEntity.sentAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(company, name, note, recipient, sentAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InboxRecipientEntity {\n");
    
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("    sentAt: ").append(toIndentedString(sentAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
