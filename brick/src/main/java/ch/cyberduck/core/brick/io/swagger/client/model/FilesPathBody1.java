/*
 * Files.com API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.brick.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * FilesPathBody1
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-12T12:23:43.971535+02:00[Europe/Paris]")
public class FilesPathBody1 {
  @JsonProperty("provided_mtime")
  private DateTime providedMtime = null;

  @JsonProperty("priority_color")
  private String priorityColor = null;

  public FilesPathBody1 providedMtime(DateTime providedMtime) {
    this.providedMtime = providedMtime;
    return this;
  }

   /**
   * Modified time of file.
   * @return providedMtime
  **/
  @Schema(description = "Modified time of file.")
  public DateTime getProvidedMtime() {
    return providedMtime;
  }

  public void setProvidedMtime(DateTime providedMtime) {
    this.providedMtime = providedMtime;
  }

  public FilesPathBody1 priorityColor(String priorityColor) {
    this.priorityColor = priorityColor;
    return this;
  }

   /**
   * Priority/Bookmark color of file.
   * @return priorityColor
  **/
  @Schema(example = "red", description = "Priority/Bookmark color of file.")
  public String getPriorityColor() {
    return priorityColor;
  }

  public void setPriorityColor(String priorityColor) {
    this.priorityColor = priorityColor;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilesPathBody1 filesPathBody1 = (FilesPathBody1) o;
    return Objects.equals(this.providedMtime, filesPathBody1.providedMtime) &&
        Objects.equals(this.priorityColor, filesPathBody1.priorityColor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(providedMtime, priorityColor);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilesPathBody1 {\n");
    
    sb.append("    providedMtime: ").append(toIndentedString(providedMtime)).append("\n");
    sb.append("    priorityColor: ").append(toIndentedString(priorityColor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
