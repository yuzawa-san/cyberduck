/*
 * Files.com API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.brick.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * List User Cipher Uses
 */
@Schema(description = "List User Cipher Uses")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-25T22:25:43.390877+02:00[Europe/Paris]")
public class UserCipherUseEntity {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("protocol_cipher")
  private String protocolCipher = null;

  @JsonProperty("created_at")
  private DateTime createdAt = null;

  /**
   * The interface accessed
   */
  public enum InterfaceEnum {
    WEB("web"),
    FTP("ftp"),
    SFTP("sftp"),
    DAV("dav"),
    DESKTOP("desktop"),
    RESTAPI("restapi"),
    ROBOT("robot"),
    JSAPI("jsapi");

    private String value;

    InterfaceEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static InterfaceEnum fromValue(String text) {
      for (InterfaceEnum b : InterfaceEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("interface")
  private InterfaceEnum _interface = null;

  @JsonProperty("updated_at")
  private DateTime updatedAt = null;

  @JsonProperty("user_id")
  private Integer userId = null;

  public UserCipherUseEntity id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * UserCipherUse ID
   * @return id
  **/
  @Schema(example = "1", description = "UserCipherUse ID")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public UserCipherUseEntity protocolCipher(String protocolCipher) {
    this.protocolCipher = protocolCipher;
    return this;
  }

   /**
   * The protocol and cipher employed
   * @return protocolCipher
  **/
  @Schema(example = "TLSv1.2; ECDHE-RSA-AES256-GCM-SHA384", description = "The protocol and cipher employed")
  public String getProtocolCipher() {
    return protocolCipher;
  }

  public void setProtocolCipher(String protocolCipher) {
    this.protocolCipher = protocolCipher;
  }

  public UserCipherUseEntity createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The earliest recorded use of this combination of interface and protocol and cipher (for this user)
   * @return createdAt
  **/
  @Schema(description = "The earliest recorded use of this combination of interface and protocol and cipher (for this user)")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public UserCipherUseEntity _interface(InterfaceEnum _interface) {
    this._interface = _interface;
    return this;
  }

   /**
   * The interface accessed
   * @return _interface
  **/
  @Schema(example = "restapi", description = "The interface accessed")
  public InterfaceEnum getInterface() {
    return _interface;
  }

  public void setInterface(InterfaceEnum _interface) {
    this._interface = _interface;
  }

  public UserCipherUseEntity updatedAt(DateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The most recent use of this combination of interface and protocol and cipher (for this user)
   * @return updatedAt
  **/
  @Schema(description = "The most recent use of this combination of interface and protocol and cipher (for this user)")
  public DateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(DateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public UserCipherUseEntity userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * ID of the user who performed this access
   * @return userId
  **/
  @Schema(example = "1", description = "ID of the user who performed this access")
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserCipherUseEntity userCipherUseEntity = (UserCipherUseEntity) o;
    return Objects.equals(this.id, userCipherUseEntity.id) &&
        Objects.equals(this.protocolCipher, userCipherUseEntity.protocolCipher) &&
        Objects.equals(this.createdAt, userCipherUseEntity.createdAt) &&
        Objects.equals(this._interface, userCipherUseEntity._interface) &&
        Objects.equals(this.updatedAt, userCipherUseEntity.updatedAt) &&
        Objects.equals(this.userId, userCipherUseEntity.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, protocolCipher, createdAt, _interface, updatedAt, userId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserCipherUseEntity {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    protocolCipher: ").append(toIndentedString(protocolCipher)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    _interface: ").append(toIndentedString(_interface)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
