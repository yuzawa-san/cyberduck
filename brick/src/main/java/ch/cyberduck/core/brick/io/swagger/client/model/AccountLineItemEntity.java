/*
 * Files.com API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.brick.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.brick.io.swagger.client.model.InvoiceLineItemEntity;
import ch.cyberduck.core.brick.io.swagger.client.model.PaymentLineItemEntity;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * List Payments
 */
@Schema(description = "List Payments")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-25T22:25:43.390877+02:00[Europe/Paris]")
public class AccountLineItemEntity {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("amount")
  private Double amount = null;

  @JsonProperty("balance")
  private Double balance = null;

  @JsonProperty("created_at")
  private DateTime createdAt = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("download_uri")
  private String downloadUri = null;

  @JsonProperty("invoice_line_items")
  private InvoiceLineItemEntity invoiceLineItems = null;

  @JsonProperty("method")
  private String method = null;

  @JsonProperty("payment_line_items")
  private PaymentLineItemEntity paymentLineItems = null;

  @JsonProperty("payment_reversed_at")
  private DateTime paymentReversedAt = null;

  @JsonProperty("payment_type")
  private String paymentType = null;

  @JsonProperty("site_name")
  private String siteName = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("updated_at")
  private DateTime updatedAt = null;

  public AccountLineItemEntity id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Line item Id
   * @return id
  **/
  @Schema(example = "1", description = "Line item Id")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public AccountLineItemEntity amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Line item amount
   * @return amount
  **/
  @Schema(example = "1", description = "Line item amount")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public AccountLineItemEntity balance(Double balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Line item balance
   * @return balance
  **/
  @Schema(example = "1", description = "Line item balance")
  public Double getBalance() {
    return balance;
  }

  public void setBalance(Double balance) {
    this.balance = balance;
  }

  public AccountLineItemEntity createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Line item created at
   * @return createdAt
  **/
  @Schema(description = "Line item created at")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public AccountLineItemEntity currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Line item currency
   * @return currency
  **/
  @Schema(example = "USD", description = "Line item currency")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public AccountLineItemEntity downloadUri(String downloadUri) {
    this.downloadUri = downloadUri;
    return this;
  }

   /**
   * Line item download uri
   * @return downloadUri
  **/
  @Schema(example = "https://url...", description = "Line item download uri")
  public String getDownloadUri() {
    return downloadUri;
  }

  public void setDownloadUri(String downloadUri) {
    this.downloadUri = downloadUri;
  }

  public AccountLineItemEntity invoiceLineItems(InvoiceLineItemEntity invoiceLineItems) {
    this.invoiceLineItems = invoiceLineItems;
    return this;
  }

   /**
   * Get invoiceLineItems
   * @return invoiceLineItems
  **/
  @Schema(description = "")
  public InvoiceLineItemEntity getInvoiceLineItems() {
    return invoiceLineItems;
  }

  public void setInvoiceLineItems(InvoiceLineItemEntity invoiceLineItems) {
    this.invoiceLineItems = invoiceLineItems;
  }

  public AccountLineItemEntity method(String method) {
    this.method = method;
    return this;
  }

   /**
   * Line item payment method
   * @return method
  **/
  @Schema(example = "paypal", description = "Line item payment method")
  public String getMethod() {
    return method;
  }

  public void setMethod(String method) {
    this.method = method;
  }

  public AccountLineItemEntity paymentLineItems(PaymentLineItemEntity paymentLineItems) {
    this.paymentLineItems = paymentLineItems;
    return this;
  }

   /**
   * Get paymentLineItems
   * @return paymentLineItems
  **/
  @Schema(description = "")
  public PaymentLineItemEntity getPaymentLineItems() {
    return paymentLineItems;
  }

  public void setPaymentLineItems(PaymentLineItemEntity paymentLineItems) {
    this.paymentLineItems = paymentLineItems;
  }

  public AccountLineItemEntity paymentReversedAt(DateTime paymentReversedAt) {
    this.paymentReversedAt = paymentReversedAt;
    return this;
  }

   /**
   * Date/time payment was reversed if applicable
   * @return paymentReversedAt
  **/
  @Schema(description = "Date/time payment was reversed if applicable")
  public DateTime getPaymentReversedAt() {
    return paymentReversedAt;
  }

  public void setPaymentReversedAt(DateTime paymentReversedAt) {
    this.paymentReversedAt = paymentReversedAt;
  }

  public AccountLineItemEntity paymentType(String paymentType) {
    this.paymentType = paymentType;
    return this;
  }

   /**
   * Type of payment if applicable
   * @return paymentType
  **/
  @Schema(description = "Type of payment if applicable")
  public String getPaymentType() {
    return paymentType;
  }

  public void setPaymentType(String paymentType) {
    this.paymentType = paymentType;
  }

  public AccountLineItemEntity siteName(String siteName) {
    this.siteName = siteName;
    return this;
  }

   /**
   * Site name this line item is for
   * @return siteName
  **/
  @Schema(example = "My Site", description = "Site name this line item is for")
  public String getSiteName() {
    return siteName;
  }

  public void setSiteName(String siteName) {
    this.siteName = siteName;
  }

  public AccountLineItemEntity type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type of line item, either payment or invoice
   * @return type
  **/
  @Schema(example = "invoice", description = "Type of line item, either payment or invoice")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public AccountLineItemEntity updatedAt(DateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Line item updated at
   * @return updatedAt
  **/
  @Schema(description = "Line item updated at")
  public DateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(DateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountLineItemEntity accountLineItemEntity = (AccountLineItemEntity) o;
    return Objects.equals(this.id, accountLineItemEntity.id) &&
        Objects.equals(this.amount, accountLineItemEntity.amount) &&
        Objects.equals(this.balance, accountLineItemEntity.balance) &&
        Objects.equals(this.createdAt, accountLineItemEntity.createdAt) &&
        Objects.equals(this.currency, accountLineItemEntity.currency) &&
        Objects.equals(this.downloadUri, accountLineItemEntity.downloadUri) &&
        Objects.equals(this.invoiceLineItems, accountLineItemEntity.invoiceLineItems) &&
        Objects.equals(this.method, accountLineItemEntity.method) &&
        Objects.equals(this.paymentLineItems, accountLineItemEntity.paymentLineItems) &&
        Objects.equals(this.paymentReversedAt, accountLineItemEntity.paymentReversedAt) &&
        Objects.equals(this.paymentType, accountLineItemEntity.paymentType) &&
        Objects.equals(this.siteName, accountLineItemEntity.siteName) &&
        Objects.equals(this.type, accountLineItemEntity.type) &&
        Objects.equals(this.updatedAt, accountLineItemEntity.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, amount, balance, createdAt, currency, downloadUri, invoiceLineItems, method, paymentLineItems, paymentReversedAt, paymentType, siteName, type, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountLineItemEntity {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    downloadUri: ").append(toIndentedString(downloadUri)).append("\n");
    sb.append("    invoiceLineItems: ").append(toIndentedString(invoiceLineItems)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    paymentLineItems: ").append(toIndentedString(paymentLineItems)).append("\n");
    sb.append("    paymentReversedAt: ").append(toIndentedString(paymentReversedAt)).append("\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    siteName: ").append(toIndentedString(siteName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
