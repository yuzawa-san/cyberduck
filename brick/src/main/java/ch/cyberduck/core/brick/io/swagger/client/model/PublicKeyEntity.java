/*
 * Files.com API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.brick.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

/**
 * List Public Keys
 */
@ApiModel(description = "List Public Keys")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-06-30T21:29:25.490+02:00")
public class PublicKeyEntity {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("created_at")
  private DateTime createdAt = null;

  @JsonProperty("fingerprint")
  private String fingerprint = null;

  public PublicKeyEntity id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Public key ID
   * @return id
  **/
  @ApiModelProperty(example = "1", value = "Public key ID")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public PublicKeyEntity title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Public key title
   * @return title
  **/
  @ApiModelProperty(example = "My public key", value = "Public key title")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public PublicKeyEntity createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Public key created at date/time
   * @return createdAt
  **/
  @ApiModelProperty(example = "2000-01-01T01:00:00Z", value = "Public key created at date/time")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public PublicKeyEntity fingerprint(String fingerprint) {
    this.fingerprint = fingerprint;
    return this;
  }

   /**
   * Public key fingerprint
   * @return fingerprint
  **/
  @ApiModelProperty(example = "43:51:43:a1:b5:fc:8b:b7:0a:3a:a9:b1:0f:66:73:a8", value = "Public key fingerprint")
  public String getFingerprint() {
    return fingerprint;
  }

  public void setFingerprint(String fingerprint) {
    this.fingerprint = fingerprint;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PublicKeyEntity publicKeyEntity = (PublicKeyEntity) o;
    return Objects.equals(this.id, publicKeyEntity.id) &&
        Objects.equals(this.title, publicKeyEntity.title) &&
        Objects.equals(this.createdAt, publicKeyEntity.createdAt) &&
        Objects.equals(this.fingerprint, publicKeyEntity.fingerprint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, createdAt, fingerprint);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PublicKeyEntity {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    fingerprint: ").append(toIndentedString(fingerprint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

