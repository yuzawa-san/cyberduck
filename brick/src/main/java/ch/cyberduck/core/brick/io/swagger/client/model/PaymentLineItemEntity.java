/*
 * Files.com API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.brick.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * PaymentLineItemEntity
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-23T20:47:00.742522+02:00[Europe/Paris]")
public class PaymentLineItemEntity {
  @JsonProperty("amount")
  private Double amount = null;

  @JsonProperty("created_at")
  private DateTime createdAt = null;

  @JsonProperty("invoice_id")
  private Integer invoiceId = null;

  @JsonProperty("payment_id")
  private Integer paymentId = null;

  @JsonProperty("updated_at")
  private DateTime updatedAt = null;

  public PaymentLineItemEntity amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Payment line item amount
   * @return amount
  **/
  @Schema(example = "1", description = "Payment line item amount")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public PaymentLineItemEntity createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Payment line item created at date/time
   * @return createdAt
  **/
  @Schema(description = "Payment line item created at date/time")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public PaymentLineItemEntity invoiceId(Integer invoiceId) {
    this.invoiceId = invoiceId;
    return this;
  }

   /**
   * Invoice ID
   * @return invoiceId
  **/
  @Schema(example = "1", description = "Invoice ID")
  public Integer getInvoiceId() {
    return invoiceId;
  }

  public void setInvoiceId(Integer invoiceId) {
    this.invoiceId = invoiceId;
  }

  public PaymentLineItemEntity paymentId(Integer paymentId) {
    this.paymentId = paymentId;
    return this;
  }

   /**
   * Payment ID
   * @return paymentId
  **/
  @Schema(example = "1", description = "Payment ID")
  public Integer getPaymentId() {
    return paymentId;
  }

  public void setPaymentId(Integer paymentId) {
    this.paymentId = paymentId;
  }

  public PaymentLineItemEntity updatedAt(DateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Payment line item updated at date/time
   * @return updatedAt
  **/
  @Schema(description = "Payment line item updated at date/time")
  public DateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(DateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentLineItemEntity paymentLineItemEntity = (PaymentLineItemEntity) o;
    return Objects.equals(this.amount, paymentLineItemEntity.amount) &&
        Objects.equals(this.createdAt, paymentLineItemEntity.createdAt) &&
        Objects.equals(this.invoiceId, paymentLineItemEntity.invoiceId) &&
        Objects.equals(this.paymentId, paymentLineItemEntity.paymentId) &&
        Objects.equals(this.updatedAt, paymentLineItemEntity.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, createdAt, invoiceId, paymentId, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentLineItemEntity {\n");
    
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    invoiceId: ").append(toIndentedString(invoiceId)).append("\n");
    sb.append("    paymentId: ").append(toIndentedString(paymentId)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
