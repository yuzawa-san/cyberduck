/*
 * Files.com API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.brick.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * GroupsBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-25T22:25:43.390877+02:00[Europe/Paris]")
public class GroupsBody {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("notes")
  private String notes = null;

  @JsonProperty("user_ids")
  private String userIds = null;

  @JsonProperty("admin_ids")
  private String adminIds = null;

  public GroupsBody name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Group name.
   * @return name
  **/
  @Schema(description = "Group name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GroupsBody notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * Group notes.
   * @return notes
  **/
  @Schema(description = "Group notes.")
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }

  public GroupsBody userIds(String userIds) {
    this.userIds = userIds;
    return this;
  }

   /**
   * A list of user ids. If sent as a string, should be comma-delimited.
   * @return userIds
  **/
  @Schema(description = "A list of user ids. If sent as a string, should be comma-delimited.")
  public String getUserIds() {
    return userIds;
  }

  public void setUserIds(String userIds) {
    this.userIds = userIds;
  }

  public GroupsBody adminIds(String adminIds) {
    this.adminIds = adminIds;
    return this;
  }

   /**
   * A list of group admin user ids. If sent as a string, should be comma-delimited.
   * @return adminIds
  **/
  @Schema(description = "A list of group admin user ids. If sent as a string, should be comma-delimited.")
  public String getAdminIds() {
    return adminIds;
  }

  public void setAdminIds(String adminIds) {
    this.adminIds = adminIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupsBody groupsBody = (GroupsBody) o;
    return Objects.equals(this.name, groupsBody.name) &&
        Objects.equals(this.notes, groupsBody.notes) &&
        Objects.equals(this.userIds, groupsBody.userIds) &&
        Objects.equals(this.adminIds, groupsBody.adminIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, notes, userIds, adminIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupsBody {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    userIds: ").append(toIndentedString(userIds)).append("\n");
    sb.append("    adminIds: ").append(toIndentedString(adminIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
