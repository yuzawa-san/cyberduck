/*
 * Files.com API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.brick.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * List Action Notification Export Results
 */
@Schema(description = "List Action Notification Export Results")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-25T22:25:43.390877+02:00[Europe/Paris]")
public class ActionNotificationExportResultEntity {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("created_at")
  private Integer createdAt = null;

  @JsonProperty("status")
  private Integer status = null;

  @JsonProperty("message")
  private String message = null;

  @JsonProperty("success")
  private Boolean success = null;

  @JsonProperty("request_headers")
  private String requestHeaders = null;

  @JsonProperty("request_method")
  private String requestMethod = null;

  @JsonProperty("request_url")
  private String requestUrl = null;

  @JsonProperty("path")
  private String path = null;

  @JsonProperty("folder")
  private String folder = null;

  public ActionNotificationExportResultEntity id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Notification ID
   * @return id
  **/
  @Schema(example = "1", description = "Notification ID")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ActionNotificationExportResultEntity createdAt(Integer createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * When the notification was sent.
   * @return createdAt
  **/
  @Schema(example = "1", description = "When the notification was sent.")
  public Integer getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(Integer createdAt) {
    this.createdAt = createdAt;
  }

  public ActionNotificationExportResultEntity status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * HTTP status code returned in the webhook response.
   * @return status
  **/
  @Schema(example = "200", description = "HTTP status code returned in the webhook response.")
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }

  public ActionNotificationExportResultEntity message(String message) {
    this.message = message;
    return this;
  }

   /**
   * A message indicating the overall status of the webhook notification.
   * @return message
  **/
  @Schema(example = "Success", description = "A message indicating the overall status of the webhook notification.")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public ActionNotificationExportResultEntity success(Boolean success) {
    this.success = success;
    return this;
  }

   /**
   * &#x60;true&#x60; if the webhook succeeded by receiving a 200 or 204 response.
   * @return success
  **/
  @Schema(example = "true", description = "`true` if the webhook succeeded by receiving a 200 or 204 response.")
  public Boolean isSuccess() {
    return success;
  }

  public void setSuccess(Boolean success) {
    this.success = success;
  }

  public ActionNotificationExportResultEntity requestHeaders(String requestHeaders) {
    this.requestHeaders = requestHeaders;
    return this;
  }

   /**
   * A JSON-encoded string with headers that were sent with the webhook.
   * @return requestHeaders
  **/
  @Schema(example = "{\"User-Agent\":\"Files.com Webhook\"}", description = "A JSON-encoded string with headers that were sent with the webhook.")
  public String getRequestHeaders() {
    return requestHeaders;
  }

  public void setRequestHeaders(String requestHeaders) {
    this.requestHeaders = requestHeaders;
  }

  public ActionNotificationExportResultEntity requestMethod(String requestMethod) {
    this.requestMethod = requestMethod;
    return this;
  }

   /**
   * The HTTP verb used to perform the webhook.
   * @return requestMethod
  **/
  @Schema(example = "GET", description = "The HTTP verb used to perform the webhook.")
  public String getRequestMethod() {
    return requestMethod;
  }

  public void setRequestMethod(String requestMethod) {
    this.requestMethod = requestMethod;
  }

  public ActionNotificationExportResultEntity requestUrl(String requestUrl) {
    this.requestUrl = requestUrl;
    return this;
  }

   /**
   * The webhook request URL.
   * @return requestUrl
  **/
  @Schema(example = "www.example.com/webhook_receiver", description = "The webhook request URL.")
  public String getRequestUrl() {
    return requestUrl;
  }

  public void setRequestUrl(String requestUrl) {
    this.requestUrl = requestUrl;
  }

  public ActionNotificationExportResultEntity path(String path) {
    this.path = path;
    return this;
  }

   /**
   * The path to the actual file that triggered this notification.
   * @return path
  **/
  @Schema(example = "MyFolder/MyFile.txt", description = "The path to the actual file that triggered this notification.")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public ActionNotificationExportResultEntity folder(String folder) {
    this.folder = folder;
    return this;
  }

   /**
   * The folder associated with the triggering action for this notification.
   * @return folder
  **/
  @Schema(example = "MyFolder", description = "The folder associated with the triggering action for this notification.")
  public String getFolder() {
    return folder;
  }

  public void setFolder(String folder) {
    this.folder = folder;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActionNotificationExportResultEntity actionNotificationExportResultEntity = (ActionNotificationExportResultEntity) o;
    return Objects.equals(this.id, actionNotificationExportResultEntity.id) &&
        Objects.equals(this.createdAt, actionNotificationExportResultEntity.createdAt) &&
        Objects.equals(this.status, actionNotificationExportResultEntity.status) &&
        Objects.equals(this.message, actionNotificationExportResultEntity.message) &&
        Objects.equals(this.success, actionNotificationExportResultEntity.success) &&
        Objects.equals(this.requestHeaders, actionNotificationExportResultEntity.requestHeaders) &&
        Objects.equals(this.requestMethod, actionNotificationExportResultEntity.requestMethod) &&
        Objects.equals(this.requestUrl, actionNotificationExportResultEntity.requestUrl) &&
        Objects.equals(this.path, actionNotificationExportResultEntity.path) &&
        Objects.equals(this.folder, actionNotificationExportResultEntity.folder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdAt, status, message, success, requestHeaders, requestMethod, requestUrl, path, folder);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActionNotificationExportResultEntity {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    requestHeaders: ").append(toIndentedString(requestHeaders)).append("\n");
    sb.append("    requestMethod: ").append(toIndentedString(requestMethod)).append("\n");
    sb.append("    requestUrl: ").append(toIndentedString(requestUrl)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    folder: ").append(toIndentedString(folder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
