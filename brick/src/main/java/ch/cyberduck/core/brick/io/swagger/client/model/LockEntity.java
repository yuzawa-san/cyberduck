/*
 * Files.com API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.brick.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * List Locks by path
 */
@Schema(description = "List Locks by path")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-12T12:23:43.971535+02:00[Europe/Paris]")
public class LockEntity {
  @JsonProperty("depth")
  private String depth = null;

  @JsonProperty("owner")
  private String owner = null;

  @JsonProperty("path")
  private String path = null;

  @JsonProperty("scope")
  private String scope = null;

  @JsonProperty("timeout")
  private Integer timeout = null;

  @JsonProperty("token")
  private String token = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("user_id")
  private Integer userId = null;

  @JsonProperty("username")
  private String username = null;

  public LockEntity depth(String depth) {
    this.depth = depth;
    return this;
  }

   /**
   * Lock depth (0 or infinity)
   * @return depth
  **/
  @Schema(example = "infinity", description = "Lock depth (0 or infinity)")
  public String getDepth() {
    return depth;
  }

  public void setDepth(String depth) {
    this.depth = depth;
  }

  public LockEntity owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Owner of lock.  This can be any arbitrary string.
   * @return owner
  **/
  @Schema(example = "user", description = "Owner of lock.  This can be any arbitrary string.")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public LockEntity path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Path
   * @return path
  **/
  @Schema(example = "locked_file", description = "Path")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public LockEntity scope(String scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Lock scope(shared or exclusive)
   * @return scope
  **/
  @Schema(example = "shared", description = "Lock scope(shared or exclusive)")
  public String getScope() {
    return scope;
  }

  public void setScope(String scope) {
    this.scope = scope;
  }

  public LockEntity timeout(Integer timeout) {
    this.timeout = timeout;
    return this;
  }

   /**
   * Lock timeout
   * @return timeout
  **/
  @Schema(example = "43200", description = "Lock timeout")
  public Integer getTimeout() {
    return timeout;
  }

  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }

  public LockEntity token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Lock token.  Use to release lock.
   * @return token
  **/
  @Schema(example = "17c54824e9931a4688ca032d03f6663c", description = "Lock token.  Use to release lock.")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public LockEntity type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Lock type
   * @return type
  **/
  @Schema(example = "write", description = "Lock type")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public LockEntity userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Lock creator user ID
   * @return userId
  **/
  @Schema(example = "1", description = "Lock creator user ID")
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }

  public LockEntity username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Lock creator username
   * @return username
  **/
  @Schema(example = "username", description = "Lock creator username")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LockEntity lockEntity = (LockEntity) o;
    return Objects.equals(this.depth, lockEntity.depth) &&
        Objects.equals(this.owner, lockEntity.owner) &&
        Objects.equals(this.path, lockEntity.path) &&
        Objects.equals(this.scope, lockEntity.scope) &&
        Objects.equals(this.timeout, lockEntity.timeout) &&
        Objects.equals(this.token, lockEntity.token) &&
        Objects.equals(this.type, lockEntity.type) &&
        Objects.equals(this.userId, lockEntity.userId) &&
        Objects.equals(this.username, lockEntity.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(depth, owner, path, scope, timeout, token, type, userId, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LockEntity {\n");
    
    sb.append("    depth: ").append(toIndentedString(depth)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
