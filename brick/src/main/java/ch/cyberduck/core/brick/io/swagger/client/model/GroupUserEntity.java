/*
 * Files.com API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.brick.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Create Group User
 */
@Schema(description = "Create Group User")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-23T20:47:00.742522+02:00[Europe/Paris]")
public class GroupUserEntity {
  @JsonProperty("group_name")
  private String groupName = null;

  @JsonProperty("group_id")
  private Integer groupId = null;

  @JsonProperty("user_id")
  private Integer userId = null;

  @JsonProperty("admin")
  private Boolean admin = null;

  @JsonProperty("usernames")
  private List<String> usernames = null;

  public GroupUserEntity groupName(String groupName) {
    this.groupName = groupName;
    return this;
  }

   /**
   * Group name
   * @return groupName
  **/
  @Schema(example = "My Group", description = "Group name")
  public String getGroupName() {
    return groupName;
  }

  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }

  public GroupUserEntity groupId(Integer groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Group ID
   * @return groupId
  **/
  @Schema(example = "1", description = "Group ID")
  public Integer getGroupId() {
    return groupId;
  }

  public void setGroupId(Integer groupId) {
    this.groupId = groupId;
  }

  public GroupUserEntity userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * User ID
   * @return userId
  **/
  @Schema(example = "1", description = "User ID")
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }

  public GroupUserEntity admin(Boolean admin) {
    this.admin = admin;
    return this;
  }

   /**
   * Is this user an administrator of this group?
   * @return admin
  **/
  @Schema(example = "true", description = "Is this user an administrator of this group?")
  public Boolean isAdmin() {
    return admin;
  }

  public void setAdmin(Boolean admin) {
    this.admin = admin;
  }

  public GroupUserEntity usernames(List<String> usernames) {
    this.usernames = usernames;
    return this;
  }

  public GroupUserEntity addUsernamesItem(String usernamesItem) {
    if (this.usernames == null) {
      this.usernames = new ArrayList<>();
    }
    this.usernames.add(usernamesItem);
    return this;
  }

   /**
   * A list of usernames for users in this group
   * @return usernames
  **/
  @Schema(example = "[\"user\"]", description = "A list of usernames for users in this group")
  public List<String> getUsernames() {
    return usernames;
  }

  public void setUsernames(List<String> usernames) {
    this.usernames = usernames;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupUserEntity groupUserEntity = (GroupUserEntity) o;
    return Objects.equals(this.groupName, groupUserEntity.groupName) &&
        Objects.equals(this.groupId, groupUserEntity.groupId) &&
        Objects.equals(this.userId, groupUserEntity.userId) &&
        Objects.equals(this.admin, groupUserEntity.admin) &&
        Objects.equals(this.usernames, groupUserEntity.usernames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groupName, groupId, userId, admin, usernames);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupUserEntity {\n");
    
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    admin: ").append(toIndentedString(admin)).append("\n");
    sb.append("    usernames: ").append(toIndentedString(usernames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
