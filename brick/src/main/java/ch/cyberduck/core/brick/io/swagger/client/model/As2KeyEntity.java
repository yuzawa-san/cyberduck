/*
 * Files.com API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.brick.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * List As2 Keys
 */
@Schema(description = "List As2 Keys")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-25T22:25:43.390877+02:00[Europe/Paris]")
public class As2KeyEntity {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("as2_partnership_name")
  private String as2PartnershipName = null;

  @JsonProperty("created_at")
  private DateTime createdAt = null;

  @JsonProperty("fingerprint")
  private String fingerprint = null;

  public As2KeyEntity id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * AS2 Key ID
   * @return id
  **/
  @Schema(example = "1", description = "AS2 Key ID")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public As2KeyEntity as2PartnershipName(String as2PartnershipName) {
    this.as2PartnershipName = as2PartnershipName;
    return this;
  }

   /**
   * AS2 Partnership Name
   * @return as2PartnershipName
  **/
  @Schema(example = "Test", description = "AS2 Partnership Name")
  public String getAs2PartnershipName() {
    return as2PartnershipName;
  }

  public void setAs2PartnershipName(String as2PartnershipName) {
    this.as2PartnershipName = as2PartnershipName;
  }

  public As2KeyEntity createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * AS2 Key created at date/time
   * @return createdAt
  **/
  @Schema(description = "AS2 Key created at date/time")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public As2KeyEntity fingerprint(String fingerprint) {
    this.fingerprint = fingerprint;
    return this;
  }

   /**
   * Public key fingerprint
   * @return fingerprint
  **/
  @Schema(example = "cf:cb:d3:26:52:6c:55:88:83:17:13:cf:e7:70:eb:1b:32:37:38:c0", description = "Public key fingerprint")
  public String getFingerprint() {
    return fingerprint;
  }

  public void setFingerprint(String fingerprint) {
    this.fingerprint = fingerprint;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    As2KeyEntity as2KeyEntity = (As2KeyEntity) o;
    return Objects.equals(this.id, as2KeyEntity.id) &&
        Objects.equals(this.as2PartnershipName, as2KeyEntity.as2PartnershipName) &&
        Objects.equals(this.createdAt, as2KeyEntity.createdAt) &&
        Objects.equals(this.fingerprint, as2KeyEntity.fingerprint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, as2PartnershipName, createdAt, fingerprint);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class As2KeyEntity {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    as2PartnershipName: ").append(toIndentedString(as2PartnershipName)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    fingerprint: ").append(toIndentedString(fingerprint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
